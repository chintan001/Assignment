   //--------------------  START MATCH CONCLUDED BLOCK ------------------------- 
            else if (this.state == 'mom') {
                console.log('in mom ............................................')

                // Check For Toss
                if (option.includes("t")) {
                    console.log(clc.blueBright(JSONData.toss.winner + " won the toss and opted for " + JSONData.toss.decision));
@@ -90,7 +88,7 @@ function matchStats(link, option) {
                            console.log(clc.cyanBright(JSONData.team1.s_name + " : ") + clc.yellowBright(this.score.bowling.score));
                        }
                        if (JSONData.team2.id == this.score.bowling.id) {
                            console.log(clc.cyanBright(JSONData.team1.s_name + " : ") + clc.yellowBright(this.score.bowling.score));
                            console.log(clc.cyanBright(JSONData.team2.s_name + " : ") + clc.yellowBright(this.score.bowling.score));
                        }
                    }

 83  MatchIndex.js 
@@ -1,47 +1,50 @@
//fetching the Match Id from the URI link


const Crawler = require("crawler");
const { matchStats } = require("./MatchData");
const request = require('request-promise-native');
const inquirer = require('inquirer');

const crawler = new Crawler();

const callbackFunction = options => (error, res, done) => {
    if (error) {
        console.log(error);
    }
    else {
        // Extract Details drom webpage
        const $ = res.$;
        const header = $(".cb-tms-itm").first().find(".cb-schdl").first().find('a');
        let headerLink = header[0].attribs.href;
        headerLink = headerLink.split('/');
        const MatchId = headerLink[2];
        const matchUrlLink = `https://www.cricbuzz.com/match-api/${MatchId}/commentary.json`;
        matchStats(matchUrlLink, options);
    }
    done();
}

function queue(criclink, options) {
    crawler.queue([{
        uri: criclink,
        maxConnections: 10,
        callback: callbackFunction(options),
    }]);
}
const LIVE_MATCHES = 'https://www.cricbuzz.com/match-api/livematches.json';

function crawlerFunction(criclink, options) {
    if (options.includes('lu')) {
        queue(criclink, options);
        setInterval(() => {
            // clear console and set up a new queued object
            process.stdout.write('\u001B[2J\u001B[0;0f');
            queue(criclink, options);
        }, options.frequency || 30000);
    } else {
        queue(criclink, options);
    }
const checkMatchAndDisplay = (options) => {
    request({
        uri: LIVE_MATCHES,
        json: true,
    })
    .then(({ matches }) => {
        const matchIds = Object.keys(matches);
        const internationals = matchIds.filter(id => matches[id].series.category === 'International');
        const matchOptions = internationals.map(id => {
            const match = matches[id];
            return {
                name: `${match.team1.name} v ${match.team2.name} in ${match.series.name}`,
                value: match.id,
                short: `${match.team1.s_name} v ${match.team2.s_name}`,
            };
        });
        const questions = [
            {
                type: 'list',
                name: 'matchNumber',
                message: 'Choose which match to track scores for:',
                choices: matchOptions,
            }
        ];
        return inquirer.prompt(questions);
    })
    .then(answers => {
        const matchUrlLink = `https://www.cricbuzz.com/match-api/${answers.matchNumber}/commentary.json`;
        if (options.includes('lu')) {
            matchStats(matchUrlLink, options);
            setInterval(() => {
                // clear console and set up a new queued object
                process.stdout.write('\u001B[2J\u001B[0;0f');   
                matchStats(matchUrlLink, options);
            }, options.frequency || 30000);
        } else {
            matchStats(matchUrlLink, options);
        }
    });
}

module.exports = { crawlerFunction } 
module.exports = { checkMatchAndDisplay } 
 6  index.js 
@@ -1,8 +1,6 @@
#! /usr/bin/env node
const program = require('commander');


var criclnk = "https://www.cricbuzz.com/cricket-match/live-scores";
var options = [];
program
.version('1.0.9')
@@ -61,8 +59,8 @@ if (!program.live && !program.commentary && !program.scorecard && !program.umpir
  options.push("l");
}

var MatchIndex =  require('./MatchIndex')
MatchIndex.crawlerFunction(criclnk, options);
var MatchIndex = require('./MatchIndex')
MatchIndex.checkMatchAndDisplay(options);

}